(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b1be7"],{"20c6":function(s,a,t){"use strict";t.r(a);var n=function(){var s=this;s._self._c;return s._m(0)},v=[function(){var s=this,a=s._self._c;return a("div",[a("h1",[s._v("如何实现AI生成节点内容")]),a("p",[s._v("目前AI能力非常流行，每个应用都给自己加上了AI的能力提高竞争力，那么在使用了"),a("code",[s._v("simple-mind-map")]),s._v("的情况下如何添加AI的能力呢，本教程会详细的教你如何实现。")]),a("p",[s._v("首先要说明的是本教程并不会真的实现一个可用的AI能力，只是在假设你要实现该功能的前提下来教你如何调用对应的API来实现你想要的效果。")]),a("p",[s._v("其次AI返回的数据结构不尽相同，你都需要自行转换成"),a("code",[s._v("simple-mind-map")]),s._v("的结构类型。")]),a("h2",[s._v("自动生成整个思维导图")]),a("h3",[s._v("一次生成")]),a("p",[s._v("通过AI生成整个思维导图并且一次直接生成，这个其实就是普通的回显功能，那么你可以在实例化时通过"),a("code",[s._v("data")]),s._v("传入生成的数据：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mindMap = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" MindMap({\n    el,\n    "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'我是自动生成的节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": [\n            {\n                "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n                    "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'子节点'")]),s._v("\n                },\n                "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n            }\n        ]\n    }\n})\n")])]),a("p",[s._v("也可以在实例化之后使用"),a("code",[s._v("setData")]),s._v("方法设置：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("mindMap.setData({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'我是自动生成的节点'")]),s._v("\n    },\n    "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": [\n        {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n                "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'子节点'")]),s._v("\n            },\n            "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n        }\n    ]\n})\n")])]),a("h3",[s._v("依次生成节点")]),a("p",[s._v("如果你想像ChatGPT一样依次生成节点，那么推荐使用"),a("code",[s._v("updateData")]),s._v("方法增量更新节点数据，而不是手动获取到之前插入的节点实例，再调用命令来插入下级节点，这样会复杂很多，当然，如果你能轻松的知道当前创建到哪里了，并且下一个节点在哪个节点下创建，可以忽略。")]),a("blockquote",[a("p",[s._v("updateData方法是v0.9.9+的方法，之前的版本可以使用下面的方法：")])]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" updateData = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("data")]),s._v(") =>")]),s._v(" {\n    mindMap.renderer.setData(data)\n    mindMap.render()\n    mindMap.command.addHistory()\n}\n")])]),a("p",[s._v("增量更新的前提是之前生成的节点都存在"),a("code",[s._v("uid")]),s._v("，并且不会变化，这样调用"),a("code",[s._v("updateData")]),s._v("方法渲染时会根据"),a("code",[s._v("uid")]),s._v("来复用之前的节点，只创建新的节点，达到依次生成的目的。")]),a("p",[s._v("比如第一次返回的数据：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" data = {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'根节点'")]),s._v(",\n        "),a("span",{staticClass:"hljs-attr"},[s._v("uid")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'1'")]),s._v("\n    },\n    "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n}\n\nmindMap.setData(data)\n")])]),a("p",[s._v("第二次返回的数据：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" data = {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'根节点'")]),s._v(",\n        "),a("span",{staticClass:"hljs-attr"},[s._v("uid")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'1'")]),s._v("\n    },\n    "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": [\n        {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n                "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'二级节点'")]),s._v(",\n                "),a("span",{staticClass:"hljs-attr"},[s._v("uid")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'2'")]),s._v("\n            },\n            "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n        }\n    ]\n}\n\nmindMap.updateData(data)\n")])]),a("p",[s._v("以此类推，这样虽然是整个数据更新，但是因为复用的原因画布呈现的是依次生成新节点的效果。")]),a("p",[s._v("当生成的节点多了会有个问题，就是新生成的节点在画布外看不见了，所以我们要将新生成的节点移动到画布中心，首先可以监听"),a("code",[s._v("data_change_detail")]),s._v("事件来获取到详细的更新数据，找出其中新创建的节点数据，然后使用"),a("code",[s._v("findNodeByUid")]),s._v("方法找出对应的节点实例，最后调用"),a("code",[s._v("moveNodeToCenter")]),s._v("方法将该节点移动到画布中心即可。")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("mindMap.on("),a("span",{staticClass:"hljs-string"},[s._v("'data_change_detail'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("list")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 找出新创建节点中的最后一个")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" lastCreate = list.filter("),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("item")]),s._v(") =>")]),s._v(" {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" item.action === "),a("span",{staticClass:"hljs-string"},[s._v("'create'")]),s._v("\n    })["),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v("]\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (lastCreate) {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" uid = lastCreate.data.data.uid\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" node = mindMap.renderer.findNodeByUid(uid)\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (node) {\n            mindMap.renderer.moveNodeToCenter(node)\n        }\n    }\n})\n")])]),a("p",[s._v("当节点数据多了，可能"),a("code",[s._v("data_change_detail")]),s._v("事件触发时节点树还没渲染完毕，导致获取不到节点，解决这个问题可以通过监听"),a("code",[s._v("node_tree_render_end")]),s._v("事件：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" waitUid = "),a("span",{staticClass:"hljs-string"},[s._v("''")]),s._v("\nmindMap.on("),a("span",{staticClass:"hljs-string"},[s._v("'data_change_detail'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("list")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// ...")]),s._v("\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (lastCreate) {\n        "),a("span",{staticClass:"hljs-comment"},[s._v("// ...")]),s._v("\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (node) {\n            mindMap.renderer.moveNodeToCenter(node)\n        } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n            waitUid = uid\n        }\n    }\n})\n\nmindMap.on("),a("span",{staticClass:"hljs-string"},[s._v("'node_tree_render_end'")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v("{\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (waitUid) {\n        waitUid = "),a("span",{staticClass:"hljs-string"},[s._v("''")]),s._v("\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" node = mindMap.renderer.findNodeByUid(waitUid)\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (node) {\n            mindMap.renderer.moveNodeToCenter(node)\n        }\n    }\n})\n")])]),a("p",[s._v("当在"),a("code",[s._v("data_change_detail")]),s._v("事件中没有获取到节点实例就将该"),a("code",[s._v("uid")]),s._v("保存起来，然后在"),a("code",[s._v("node_tree_render_end")]),s._v("事件里判断是否有保存的"),a("code",[s._v("uid")]),s._v("，是的话就获取该节点实例并移动到画布中心。")]),a("p",[s._v("最后，当自动生成节点中最好禁止用户操作，否则可能会产生异常。")]),a("h3",[s._v("完整示例")]),a("iframe",{staticStyle:{width:"100%",height:"455px",border:"none"},attrs:{src:"https://wanglin2.github.io/playground/#eNrtV19rHDcQ/ypiS9m95rx3bvN0vTOJnUILdVtC+uQNZr2ru1OqlZZdrc+HOQih0DT0IYUWSkto+9QSWvKSByct+TT2XT5GR7uS9t/ZxNBAoTHYXmlmfvObGWkkHVvX49g9zLA1sIZpkJBYoBSLLN7yGIlingh0jBI87iLOdnnGBA67KJ36lPLZTTxGCzROeIRsQLCNxS5h4a4fFyLPSmGa4o0IZjciP/YsjyHkMYoFknNSc4RYRqnHPBZwlgpwFuCdBPsCX6cUpE4HjbbQsTRUJi6wvOEL38knEQrhe1BoyB+Bj8QA2cv73y5/ePLyq8dnD35ffffz8v7D1Y9fvnxwb3XvGdCViotu8T+YEhommA3QnsYwYC30ioezPx/W8KqYDdzberaUX87Fu5fxUXzk40XHYzAuk4u355+y8xJcKEk6HxP4GOmEGGotpjrZvzxTqahwy0gIok3DvOTdZq1lr9FTqV7L9JrkG2enz79ZPf+t7a/0Wa1LvTLra2Oqo+rzv4q8ovMvEnnvTQkujrxu2nB2Docqj5Ovz+VRcrla49Lmc341ahWpVOW/vWTkv/xbnmVwLuEjaJf9sokmGav3VoTIGDmF5tbINFmXYjYR0w6ctCJLoFHnHHKIIEsAQivu5abKfQk1GoHbTpmJ5hkJIHAEFDJJdeYT8TkJAdg2SdA2nDm2dLcfTH02wfshFj6hdhc5FAhUQylJUj8VxWkCkFLNHRMqcOI4ROCoaYNUmEgKXT8QhEOaIAQ7yDGqp1xnr18pgIy49FUJuKQCtZUcjJIrYyn+gKitz3goSevooeYhTnACAbDwE5BtzyFRDpiaBGoi0rJBocyiwYn4IZY4t/gOhttTUpjVVh7CNMVNoLJEDdqVXWI+5QHfrqL0tC8SjPcLNvvwV9ZR1qPiTcaivDXCWbdMLps5jfzasndBOpqZ7fWMhyyGJYFbm6NFoL2DPFFXclrzAY8in4WuH4Yfwl7gyVzrKIYAeotEmGfCqfUGyIzczleu6CH0D2PaRZv9fj8f5TBKlt/rzN28ile5W+OZvpPr6zKmAxTyIIsgre4Eiw8olp/b849Cx1aWO5zB1mc4sTuqOTYarmfJCc9q9GDPkj1YTsNVP7/s1xusZ+n2KnWalz/CiLjJuZBl/4ynRHYH0LIpHgtYvXaQLwT7dq6+6LwPKYA0DHvF4wWeLTCAvhJTqC+MEBqG5BAF0BHSkWep0G7giHtWLlYKJCylJnBQGfZAWlXUSIJzeuBLFR3X8CATAlrZtYCS4AtQqb1iQPH05O7yj1+Ld8jy+6enJ4+Xdx+t/np69uTvs59eDHuF/UV4jYu7xHzx6NUxy2D017BXyRUMUzGnRdquqcecZ7m94gWnlpCL08gN0tSzIPfyIYeQW0mrXgszEorpQC7at3M9hGJTzQSDR3KIc0G+muXvW830a6jS0D9IOc1EYSjPsjGc9X01EjwuB233U0wmU1C/2u/HR9rzer/vaM+Rn0wI+NWoMexpwiZ6wlB31Wp4RcabmoEibcYACCs5r4HVtYoKyDezeyflDJ7oObynBFABs/M8C17gxZZze/DpQnsQ0GNksTYOEj5LoZndAQu1y9a8ygvbdqmlleK2sBb/AOBR7ZA="}}),a("h2",[s._v("在某个节点下自动生成新节点")]),a("p",[s._v("在某个节点下自动生成新节点，如果也要依次生成，那么可以使用前面的增量更新数据的方式。如果一次生成，那么可以简单的调用插入新节点的命令即可。")]),a("h3",[s._v("一次生成下级节点")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-comment"},[s._v("// 插入一个子节点")]),s._v("\nmindMap.execCommand("),a("span",{staticClass:"hljs-string"},[s._v("'INSERT_CHILD_NODE'")]),s._v(", \n    "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(",\n    node,\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'三级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    },\n    [\n        {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n                "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'三级节点的子节点'")]),s._v("\n            },\n            "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n        }\n    ]\n)\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 插入多个子节点")]),s._v("\nmindMap.execCommand("),a("span",{staticClass:"hljs-string"},[s._v("'INSERT_MULTI_CHILD_NODE'")]),s._v(", node, [\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'三级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    },\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'三级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    }\n])\n")])]),a("h3",[s._v("一次生成兄弟节点")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-comment"},[s._v("// 插入一个兄弟节点")]),s._v("\nmindMap.execCommand("),a("span",{staticClass:"hljs-string"},[s._v("'INSERT_NODE'")]),s._v(", \n    "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(",\n    node,\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'二级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    },\n    [\n        {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n                "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'二级节点的子节点'")]),s._v("\n            },\n            "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n        }\n    ]\n)\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 插入多个兄弟节点")]),s._v("\nmindMap.execCommand("),a("span",{staticClass:"hljs-string"},[s._v("'INSERT_MULTI_NODE'")]),s._v(", node, [\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'二级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    },\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("data")]),s._v(": {\n            "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'二级节点'")]),s._v("\n        },\n        "),a("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": []\n    }\n])\n")])]),a("p",[s._v("这样新创建的节点默认会被激活但不进入编辑，如果你连激活都不想要的话，那么可以通过将实例化选项"),a("code",[s._v("createNewNodeBehavior")]),s._v("设置为"),a("code",[s._v("notActive")]),s._v("。")]),a("p",[s._v("当自动生成结束后你又想恢复创建新节点时自动进入编辑状态，那么可以通过"),a("code",[s._v("updateConfig")]),s._v("方法修改"),a("code",[s._v("createNewNodeBehavior")]),s._v("：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("mindMap.updateConfig({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("createNewNodeBehavior")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'default'")]),s._v("\n})\n")])]),a("h3",[s._v("完整示例")]),a("iframe",{staticStyle:{width:"100%",height:"455px",border:"none"},attrs:{src:"https://wanglin2.github.io/playground/#eNrtV19rG0cQ/yrLliK5yCcl9EmVQ2LZUEPkFDd5yppwvhtJm97tHnd7lo0RlJDSNu1DoH0KFLdQaAntu/Pn40hWPkZmb3dPfw35Q/ySHBzszs78Zm5+M7t7J/RGkniHOdAmbWVByhNFMlB5co0JHicyVeSEpNCtESk6MhcKwhrJ+n4UycEedMmQdFMZkwoiVEqLDhdhx0/MEqMZiiNYj1G6HvsJo0wQwkQEimiZ1twgIo8iJpgIpMgUOgugnYKv4JaAdp9HYQoCtaprZOMaOdEARlHIEFBucTzUCiGF1OuiYBfXNo/v8LB6dU1bOCU4gqAt49gXYbWys/vt9t7te+2vd25u3du9tbVdqWFsBJ+uH2VQM2Ptxg4L5+YJfeU3ZwX6UXCkmqQyOvt58vyfV48eTB48w8y41aFF0U9gv6tJ7u4bqVu9O1VaQF/p8gK3kycPx/8/XgphMYzVoRRaZogSzB9Oltnp5JHil8FP587N2zvzLBWcuFRdBisf1AcT+xclGVtgM5WqD+mHzPCn2n+X2r8EYkzpfxxFjzmaT6VLTJ6gd2hL0eW9qg0hKGjYhUGRTej7h1ymGEsIXR+5wTCGDr08vKrL2PrwgYE7tBw4RE0SyiCPQSivB2o7Aj3cPN5BZqwlhqN8LiCtrNnvXEgRo1rA6FzWGNU500JGz/98ZnLG6EymGM15qBWuONk0j4y6PGqFi5plpeNF56Pnv5aczfmfi+HqrHy+dxZiWe6eon9m7bjgak9KpRn7RmZccanroRJBV2F1VwJMMaZz36pfxLCQ6kag+KG+cyD42leG6lbd3GDw7oITBXjtQHOcEdIK+SEJIj/LNhi19G1BLBktlq0CD6erJbmo0qrj6qyiQ1JSRge+VnEf3DrIlZKCXA8iHnyHKiuvMmgwOvv+/L+/Jr+fnv/0GMejs6ejs19KPlp1g/MmuHOH8ALy+O8n74E8PXlWBjz+4eH45ek7Brwa2MT7dsC4aSDKqx+fjh/9a1AmL347/+N0wXJKohu16jM1gtNMHUemXK7bmyyjXt1cX+324EEWe0GWMYo1p2+xhHgz5eTabcBD1cf+bTQ+L/QIScpqTwE9Yu0WC0Wj6PezxbJzUFND/yCTUa6MISG6Z5qkYWdKJtPJsvs+8F4f1b9sNJIj53m13y+c59hPexz9OtTED0Muek5Qhu7ZLnjDiK+4CGzQ5RwBsYMLDmiNGgb0D4N3P5MC/08KeGYXkIFyc2MUfz/MnubVceiluNfzGDRZ6wepHGR47N5HC7utrPglMbbLVGsrG9uQDl8Db1FoOA=="}})])}],l={},_=l,i=t("2877"),e=Object(i["a"])(_,n,v,!1,null,null,null);a["default"]=e.exports}}]);